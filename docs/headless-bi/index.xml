<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Headless BI on SuperSonic</title>
    <link>https://supersonicbi.github.io/docs/headless-bi/</link>
    <description>Recent content in Headless BI on SuperSonic</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://supersonicbi.github.io/docs/headless-bi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>构建模型</title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E6%9E%84%E5%BB%BA%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E6%9E%84%E5%BB%BA%E6%A8%A1%E5%9E%8B/</guid>
      <description>构建模型 # 构建语义模型是使用SuperSonic的第一步。在这个模块中, 它可以连接上你的数据库引擎, 并通过简单方便的方式来帮助你将物理数据建模为维度和指标等逻辑概念。建模完成后, 你就可以在问答中通过自然语言的方式来和你的物理数据交互啦~&#xA;问题示例&#xA;为了帮助你更好地理解建模的过程, 我们通过一个问题示例来进行介绍: SuperSonic本身作为一个产品, 那么如何用语义建模来统计它的埋点访问数据呢？比如SuperSonic在一段时间内的访问用户数是多少？这些用户的访问次数和停留时长是怎样的？这些用户来自哪些部门？这些用户看了哪些页面？分别看了多少次？等我们建模完成, 这些问题的答案也就浮出水面了。&#xA;1. 创建一个数据库链接 # 在开始探索之前, 你首先需要创建一个数据库链接来连接你的数据库, 以便后续获取数据。在SuperSonic中，主要支持JDBC类型的数据库链接，创建一个数据库连接主要分为 以下三个步骤:&#xA;填写连接信息 点击测试连接, 若连接测试通过, 则可点击保存。否则, 返回步骤1 点击保存。 如图1-1所示, 由于SuperSonic的埋点访问数据被存放在H2数据库中, 因此我们创建了一个H2数据库实例作为例子。除了H2数据库以外, 我们还支持MySQL, ClickHouse, PG等多种常见数据库。&#xA;需要说明的是, 在这里创建数据库之后, 并不是所有人都可以查询这个数据库链接的数据, 需要在图2-1表单上进行授权。&#xA;管理员: 可以编辑这个数据库链接的人&#xA;使用者: 可以使用这个数据库链接查询数据的人&#xA;2. 创建一个主题域和模型集 # 接下来, 用户可以按自己的业务场景去创建主题域, 然后在主题域下面创建具体的模型集。如图2-1所示, 为了统计SuperSonic的埋点访问情况, 我们创建了一个叫&amp;quot;超音数&amp;quot;的主题域以及基于SuperSonic的埋点数据创建了一个&amp;quot;埋点模型集&amp;quot;:&#xA;3. 创建数据模型 # 创建好了一个模型集后, 我们就可以把物理数据抽象为一个个数据模型并创建到模型集下。在SuperSonic中, 数据模型是对数据库中数据的一种逻辑层面上的抽象, 它既可以直接指代一张物理表, 也可以由一段SQL逻辑表示而成。数据模型中涉及的字段可被指定为维度或者度量, 而这些维度和度量又可以衍生出更复杂的维度和指标。如图3-1, 超音数提供了两种创建数据模型的方式。&#xA;其中, 快速创建 可以直接指定一张物理表来把它创建为数据模型, 而SQL脚本 则提供了更为灵活的数据模型创建方式, 我们可以通过写一条逻辑SQL来把它指定为数据模型&#xA;如图3-2为通过SQL脚本的方式创建数据模型, 首先需要我们填写一些基本信息, 如数据模型名称和描述。&#xA;然后我们写一条SQL来表达我们的数据模型逻辑, 然后点击运行, 就可以看到这条SQL查询出来的数据, 校验数据无误之后, 我们可以点击生成数据模型, 需要注意的是, 这里创建数据模型选择数据库链接的时候, 需要有数据库的使用者权限.</description>
    </item>
    <item>
      <title>指标管理</title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E6%8C%87%E6%A0%87%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E6%8C%87%E6%A0%87%E7%AE%A1%E7%90%86/</guid>
      <description>指标管理 # 在上一篇创建模型中，我们已经展示了如何在创建模型的时候通过快速创建的方式来创建指标。 接下来，我们继续展示下如何通过手动自定义的方式来创建指标。 创建出来后，通过进一步进行下钻维度等配置，就可以在指标市场查看这几个指标的基本数据情况啦。&#xA;在创建新的指标之前，我们首先看看访问次数这个指标的定义。如图，访问次数这个指标是在创建模型时通过快速创建的方式创建出来的，已经初始化了名称等基本信息。 上面表格中除了基本的名称信息以外，还包括:&#xA;别名: 别名是这个指标的其它名称，如访问次数这个指标又可以被称为PV。&#xA;分类: 分类是对这个指标的描述，如访问次数这个指标可被归类为核心指标，访问相关指标等。&#xA;敏感度：默认为普通。敏感度为核心的指标会有权限控制，具体会在权限篇进行详细介绍。&#xA;下钻维度：即这个指标可与哪些维度来下钻。配置了之后，这个指标在进行查询时，就只能根据这几个维度进行下钻。这个配置会作用到指标主页以及问答的推荐维度。&#xA;数据格式化: 即在查询出这个指标数据后，对指标数据格式进行可视化，如图，可以将它格式化为小数以及百分数。&#xA;根据以上介绍，我们来对访问次数这个指标进行信息补充，具体如下：&#xA;如图，除了补充别名和标签以外，我们还补充好了下钻维度信息，表示这个指标可根据部门和用户这两个维度来进行下钻查询。需要注意的是，可配置的下钻维度不仅仅来自指标当前模型，还可来自与该模型有关联关系的模型。&#xA;接下来，我们来查看它的表达式信息。可以看到，我们一共提供了三种创建指标的模式：按度量，按指标，按字段。而访问次数这个指标通过快速创建的方式创建出来，默认的模式为按度量。 选中s2_pv_uv_statis_pv这个度量并在下面的表达式框中直接填写s2_pv_uv_statis_pv， 表明这个指标是通过s2_pv_uv_statis_pv直接创建而来。需要注意的是，s2_pv_uv_statis_pv这个度量名字是由模型英文名s2_pv_uv_statis和字段pv拼接而成， 且由于在创建模型的时候已经指定了聚合方式为SUM了，所以这里的表达式无需再填写聚合函数。&#xA;以上，我们就介绍完了访问次数这个指标包含的基本信息以及它的表达式定义。接下来，我们开始来通过按指标和按字段两种模式来创建新的指标: 访问用户数和人均访问次数。&#xA;首先，我们来创建访问用户数。如图，我们补充好了访问用户数的基本信息，并给它添加了一个别名：UV。&#xA;然后，我们来配置下访问用户数的下钻维度，可以看到，我们选中了部门这个维度作为它的下钻维度，并勾选了绑定。绑定的含义是我们在查询这个指标时，必须配合这个维度来进行查询，否则提示缺少下钻维度。&#xA;最后，我们来选择按字段的方式来进行表达式的定义，这些字段来自当前模型。可以看到我们选择了user_id这个字段来创建指标，并定义了字段表达式。由于字段上不包含聚合函数，因此需要在写表达式的时候指定聚合函数。&#xA;点击完成之后，我们就完成了访问用户数这个指标的定义。最后，我们来创建人均访问次数这个指标，由于基本信息的补充都基本类似，就不再介绍啦。我们选择按指标的模式来定义表达式，通过分析，人均访问次数这个指标可由访问次数和访问用户数这两个指标结合起来创建。因此，如下图我们选中了访问次数和访问用户数这两个指标，并通过pv/uv的方式来表达人均访问次数。&#xA;到这里，我们就完成了所有指标的创建了。我们可以点击顶部指标市场TAB来看下目前系统中一共有哪些指标。在指标市场这个页面中，不仅可以支持按自然语言的方式对指标进行检索，也可以对指标进行收藏，便于下次查找。&#xA;最后，让我们点击具体的指标，进入到指标的详情页。如图，我们进入到访问次数这个指标的详情页，可以看到它的基本信息以及具体数据趋势和表格明细。同时，还可以根据我们刚刚配置的下钻维度来对指标数据进行下钻和过滤。访问用户数和停留时长等指标数据也是同理可查看。并且，若需要对数据进行下载离线分析，可直接点击下载按钮进行下载即可。&#xA;到这里，超音数产品的相关指标就都创建出来啦!</description>
    </item>
  </channel>
</rss>
