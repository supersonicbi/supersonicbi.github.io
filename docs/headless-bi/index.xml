<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Headless BI on SuperSonic</title>
    <link>https://supersonicbi.github.io/docs/headless-bi/</link>
    <description>Recent content in Headless BI on SuperSonic</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://supersonicbi.github.io/docs/headless-bi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>概念</title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E6%A6%82%E5%BF%B5/</guid>
      <description>概念 # 总览 # 下面这个图清晰地表达了SuperSonic中的各种概念之间的关系:&#xA;数据集、数据模型都归属于一个主题域&#xA;数据集可由多个模型组装而来&#xA;数据模型由指标、维度和标签组装而成&#xA;它们之间类似DB中的对应关系：&#xA;Database(主题域)-&amp;gt;View(数据集)-&amp;gt;Table(数据模型)-&amp;gt;Column(指标/维度/标签)&#xA;主题域 # 主题域可以理解为一个分类的概念，用户可以根据自己的业务场景来划分主题域。SuperSonic中的数据模型，数据集，术语等概念都归属于一个主题域。&#xA;数据模型 # 在SuperSonic中, 数据模型是对数据库中数据的一种逻辑层面上的抽象, 它既可以直接指代一张物理表, 也可以由一段SQL逻辑创建而成。 当我们得到一张表物理表或者一段逻辑SQL后，可以将表头字段指定为主键、维度、度量、时间日期或者是普通字段， 当表头字段都被赋予这些特定的语义后， 即形成了一个数据模型。&#xA;字段 字段类型(表/SQL表头) 语义类型(模型) imp_date Date 日期 user_name String 主键 department String 维度 pv Bigint 度量 uv Bigint 度量 主键 # SuperSonic中的主键概念不完全等同于数据库中的主键。当我们创建多个模型之后，如果需要指定模型间的关联关系，通俗来讲就是Join的方式， 就可以通过指定主键来进行关联。&#xA;维度 # 维度指代那些表格中通常被用来进行分组和过滤的字段。&#xA;度量 # 度量的概念则恰好和维度相反，通常是一些数值型的字段，用来表达客观现象的程度。在SuperSonic中，度量主要用来创建一个具体的指标，没有其它实质性的作用。&#xA;指标 # 指标是相对度量更具具体和实例化的概念，用户可以基于度量，字段或者已有指标来创建指标并对它进行管理。同时，创建出来的指标也可以被问答这样的上层BI产品进行消费。&#xA;时间日期 # 时间日期字段在SuperSonic中有比较重要的作用，比如一个典型的场景，当我们在问答中询问&amp;quot;超音数近10天访问次数&amp;quot;时，需要得到具体的 时间字段来进行时间范围的过滤。因此，提前在建模时把时间字段及其格式显示指定好，能起到很大的作用。并且，目前当模型中包含有度量时， 就必须指定时间日期字段。&#xA;select * from s2_pv_$interval$ 标签对象 # 在SuperSonic中，标签对象特指被标签圈选的实体对象。比如“国风类型的歌曲”，歌曲在这里就是一个标签对象，以及“访问次数超过100的用户”，用户在这里也是一个标签对象&#xA;标签 # 标签用来圈取标签对象，比如，在上面的例子“国风类型的歌曲”，国风就是一个标签。标签可以由是一个维度，也可以是由一个指标演化而来。&#xA;数据集 # 数据集是SuperSonic用来对接问答和其它上层BI应用的一个数据结构，在数据集中，可包含来自多个模型的维度指标。 对上层应用来说，底层建模细节是隐藏的，它只需要关注数据集中暴露出来的维度指标即可，也就是说，上层应用可以把一个数据集当作是一个大宽表，可以直接进行指标维度的分析查询。</description>
    </item>
    <item>
      <title></title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>连接数据库 # 1. 当前支持的数据类型 # 所有支持MySQL协议的数据库，如MySQL，Doris，StarRocks等 Clickhouse，PostgreSQL，H2 支持灵活扩展，欢迎贡献其它数据库类型 2. 在SuperSonic中创建数据库连接的步骤 # 填写连接信息 点击测试连接, 若连接测试通过, 则可点击保存。否则, 返回步骤1 点击保存。 如图所示, 我们创建了一个H2数据库实例作为例子:&#xA;需要说明的是, 在这里创建数据库之后, 并不是所有人都可以查询这个数据库链接的数据, 需要在表单上进行授权。&#xA;管理员: 可以编辑这个数据库链接的人&#xA;使用者: 可以使用这个数据库链接查询数据的人</description>
    </item>
    <item>
      <title>构建模型</title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E6%9E%84%E5%BB%BA%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E6%9E%84%E5%BB%BA%E6%A8%A1%E5%9E%8B/</guid>
      <description>构建模型 # 建模的目的&#xA;为了帮助你更好地理解建模的过程, 我们通过一个问题示例来进行介绍: SuperSonic本身作为一个产品, 那么如何用语义建模来统计它的埋点访问数据呢？比如SuperSonic在一段时间内的访问用户数是多少？ 这些用户的访问次数和停留时长是怎样的？这些用户来自哪些部门？这些用户看了哪些页面？分别看了多少次？等我们建模完成, 这些问题的答案也就浮出水面了。&#xA;1. 创建一个主题域和模型集 # 如图所示, 为了统计SuperSonic的埋点访问情况, 我们创建了一个叫&amp;quot;超音数&amp;quot;的主题域以及基于SuperSonic的埋点数据创建了一个&amp;quot;埋点模型集&amp;quot;:&#xA;2. 创建数据模型 # 创建好了一个模型集后, 我们就可以把物理数据抽象为一个个数据模型并创建到模型集下。如下图, SuperSonic提供了两种创建数据模型的方式。&#xA;快速创建可以直接指定一张物理表来把它创建为数据模型。&#xA;SQL脚本则提供了更灵活的数据模型创建方式, 我们可以通过写一条逻辑SQL来把它指定为数据模型。&#xA;2.1 编辑SQL创建数据模型 # 在填写完数据模型名称和描述等基本信息后，我们首先写一条SQL来表达我们的数据模型逻辑。 然后点击运行, 就可以看到这条SQL查询出来的数据。 校验数据无误之后, 我们可以点击生成数据模型。&#xA;注意 这里选择数据库链接的时候, 需要有数据库的使用者权限。 如图，我们把这条SQL的表头字段指定为日期，主键，维度和度量之后，还可以写一条过滤SQL用于词典导入场景。 举个例子，在问答中，如果需要对维度值进行识别，那么就需要提前把维度值写入到词典，但是当我们希望对维度值做一些过滤的时候，如在音乐场景里， 我们只希望把国风类型的歌曲导入到词典中，那么就可以通过这条SQL来进行过滤。&#xA;快速创建 若勾选，则会直接把选中的维度/度量批量创建到维度/指标列表。 2.2 指定库表名快速创建模型 # 如图，在选择快速创建的方式之后，需要先填写该模型依赖的数据库连接，然后系统会自动拉取这个数据库连接的元数据，用户直接选择库名和表名并填写基本信息就可以进入到下一步。 在第二步中，和上述通过SQL脚本来创建模型的方式基本一致，就不再重复介绍了。&#xA;如下图所示, 重复以上步骤，为我们创建的3个数据模型示例, 分别为:&#xA;用户部门: 主要包含用户以及用户的部门信息&#xA;PVUV统计: 主要包含用户访问次数和访问人数等信息&#xA;停留时长统计: 主要包含用户的停留时长信息&#xA;同时，在刚刚创建模型时，我们把一些字段标识为了维度/度量，并勾选了快速创建，因此，可以在对应模型中的指标维度列表看到已快速创建好的指标维度:&#xA;到此为止, 我们就成功把超音数的访问统计数据建模成了相关的数据模型、维度和指标。&#xA;3. 创建模型间连接 # 可以看到，刚刚创建的这些指标和维度分散在不同的模型里，那么如果想要在一次查询里同时包含这些指标和维度，如&amp;quot;按部门统计访问次数&amp;quot;，应该还要继续如何配置呢？我们可以在模型列表右上角点击切换到画布模式，并创建模型间的连接关系，如下图: 到目前为止，我们就创建好了指标维度，以及模型间的关联关系。但要想被上层应用使用到，这还不够，还需要进行最后一步，创建一个数据集。</description>
    </item>
    <item>
      <title></title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E5%88%9B%E5%BB%BA%E6%8C%87%E6%A0%87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E5%88%9B%E5%BB%BA%E6%8C%87%E6%A0%87/</guid>
      <description>创建指标 # 在构建模型时，我们已经展示了如何在创建模型的时候通过快速创建的方式来创建指标。 接下来，我们继续展示下如何通过手动自定义的方式来创建指标。 创建出来后，通过进一步进行下钻维度等配置，就可以在指标市场查看这几个指标的基本数据情况。&#xA;在创建新的指标之前，我们首先看看访问次数这个指标的定义。如图，访问次数这个指标是在创建模型时通过快速创建的方式创建出来的，已经初始化了名称等基本信息。 上面表格中除了基本的名称信息以外，还包括:&#xA;别名: 别名是这个指标的其它名称，如访问次数这个指标又可以被称为PV。&#xA;分类: 分类是对这个指标的描述，如访问次数这个指标可被归类为核心指标，访问相关指标等。&#xA;敏感度：默认为普通。敏感度为核心的指标会有权限控制，具体会在权限篇进行详细介绍。&#xA;下钻维度：即这个指标可与哪些维度来下钻。配置了之后，这个指标在进行查询时，就只能根据这几个维度进行下钻。这个配置会作用到指标主页以及问答的推荐维度。&#xA;数据格式化: 即在查询出这个指标数据后，对指标数据格式进行可视化，如图，可以将它格式化为小数以及百分数。&#xA;接下来，我们来查看指标的表达式信息。可以看到，我们一共提供了三种创建指标的模式：按度量，按指标，按字段。&#xA;1 按度量创建指标 # 访问次数这个指标通过快速创建的方式创建出来，默认的模式为按度量。 选中s2_pv_uv_statis_pv这个度量并在下面的表达式框中直接填写s2_pv_uv_statis_pv， 表明这个指标是通过s2_pv_uv_statis_pv直接创建而来。&#xA;注意&#xA;s2_pv_uv_statis_pv这个度量名字是由模型英文名s2_pv_uv_statis和字段pv拼接而成， 且由于在创建模型的时候已经指定了聚合方式为SUM了，所以这里的表达式无需再填写聚合函数。&#xA;以上，我们就介绍完了访问次数这个指标包含的基本信息以及它的表达式定义。接下来，我们开始来通过按指标和按字段两种模式来创建新的指标: 访问用户数和人均访问次数。&#xA;2 按字段创建指标 # 首先，我们来创建访问用户数。如图，我们补充好了访问用户数的基本信息，并给它添加了一个别名：UV。&#xA;接着，我们来配置下访问用户数的下钻维度，可以看到，我们选中了部门这个维度作为它的下钻维度，并勾选了绑定。绑定的含义是我们在查询这个指标时，必须配合这个维度来进行查询，否则提示缺少下钻维度。&#xA;下钻维度配置&#xA;可配置的下钻维度不仅仅来自指标当前模型，还可来自与该模型有关联关系的模型。&#xA;然后，我们来选择按字段的方式来进行表达式的定义，这些字段来自当前模型。可以看到我们选择了user_id这个字段来创建指标，并定义了字段表达式。由于字段上不包含聚合函数，因此需要在写表达式的时候指定聚合函数。&#xA;点击完成之后，我们就完成了访问用户数这个指标的定义。&#xA;3 基于已有指标来创建指标 # 最后，我们来创建人均访问次数这个指标，由于基本信息的补充都基本类似，就不再介绍啦。我们选择按指标的模式来定义表达式，通过分析，人均访问次数这个指标可由访问次数和访问用户数这两个指标结合起来创建。因此，如下图我们选中了访问次数和访问用户数这两个指标，并通过pv/uv的方式来表达人均访问次数。</description>
    </item>
    <item>
      <title></title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E7%AE%A1%E7%90%86%E6%8C%87%E6%A0%87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E7%AE%A1%E7%90%86%E6%8C%87%E6%A0%87/</guid>
      <description>管理指标 # 1. 指标列表页 # 首先，我们可以点击顶部指标市场TAB来看下目前系统中一共有哪些指标。在指标市场这个页面中，不仅可以支持按自然语言的方式对指标进行检索，也可以对指标进行收藏，便于下次查找。&#xA;2. 指标详情页 # 然后，我们可以点击具体的指标，进入到指标的详情页。如图，我们进入到访问次数这个指标的详情页，可以看到它的基本信息以及具体数据趋势和表格明细。同时，还可以根据我们刚刚配置的下钻维度来对指标数据进行下钻和过滤。访问用户数和停留时长等指标数据也是同理可查看。并且，若需要对数据进行下载离线分析，可直接点击下载按钮进行下载即可。</description>
    </item>
    <item>
      <title></title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E7%BB%84%E8%A3%85%E6%95%B0%E6%8D%AE%E9%9B%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E7%BB%84%E8%A3%85%E6%95%B0%E6%8D%AE%E9%9B%86/</guid>
      <description>组装数据集 # 1. 挑选指标维度 # 如下图，创建数据集时，首先填写好数据集的名称等基本信息，然后即可进入到下一步，可以选择相同主题域下的所有模型，并挑选符合场景需要的指标维度加入到数据集中。&#xA;注意 加入到数据集的指标维度所在的模型必须已在构建模型时配置好关联关系，否则将会提示报错。 2. 设置查询模式 # 快速补充中&amp;hellip;</description>
    </item>
    <item>
      <title></title>
      <link>https://supersonicbi.github.io/docs/headless-bi/%E9%85%8D%E7%BD%AE%E6%9D%83%E9%99%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://supersonicbi.github.io/docs/headless-bi/%E9%85%8D%E7%BD%AE%E6%9D%83%E9%99%90/</guid>
      <description>配置权限 # 快速补充中&amp;hellip;</description>
    </item>
  </channel>
</rss>
